syntax = "proto3";
package mezo.bridge.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/mezo-org/mezod/x/bridge/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;

  // max_erc20_tokens is the maximum number of distinct ERC20 tokens that can
  // be supported in the bridge. The reason for this limit is to not downgrade
  // the bridge performance on the Mezo chain side too much.
  uint32 max_erc20_tokens = 1;
}

// AssetsLockedEvent represents the event where inbound assets are locked in
// the Bitcoin bridge.
message AssetsLockedEvent {
  // sequence is the unique identifier of the event.
  string sequence = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  // recipient is the account address to receive the locked assets on Mezo,
  // in Bech32 format.
  string recipient = 2;
  // amount of assets locked, in 1e18 precision.
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  // token is the address of the bridged token, in EIP55-compliant hexadecimal format.
  string token = 4;
}