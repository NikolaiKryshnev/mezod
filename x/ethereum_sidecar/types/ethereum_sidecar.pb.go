// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mezo/ethereum_sidecar/v1/ethereum_sidecar.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	types "github.com/mezo-org/mezod/x/bridge/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AssetsLockedEventsRequest is the request type for the GetAssetsLockedEvents
// query.
type AssetsLockedEventsRequest struct {
	// sequence_start is the start of the sequence range (inclusive). If null, unbounded on the lower side.
	SequenceStart *cosmossdk_io_math.Int `protobuf:"bytes,1,opt,name=sequence_start,json=sequenceStart,proto3,customtype=cosmossdk.io/math.Int" json:"sequence_start,omitempty"`
	// sequence_end is the end of the sequence range (exclusive). If null, unbounded on the upper side.
	SequenceEnd *cosmossdk_io_math.Int `protobuf:"bytes,2,opt,name=sequence_end,json=sequenceEnd,proto3,customtype=cosmossdk.io/math.Int" json:"sequence_end,omitempty"`
}

func (m *AssetsLockedEventsRequest) Reset()         { *m = AssetsLockedEventsRequest{} }
func (m *AssetsLockedEventsRequest) String() string { return proto.CompactTextString(m) }
func (*AssetsLockedEventsRequest) ProtoMessage()    {}
func (*AssetsLockedEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8cb11e8648a9ddc, []int{0}
}
func (m *AssetsLockedEventsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssetsLockedEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssetsLockedEventsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssetsLockedEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsLockedEventsRequest.Merge(m, src)
}
func (m *AssetsLockedEventsRequest) XXX_Size() int {
	return m.Size()
}
func (m *AssetsLockedEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsLockedEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsLockedEventsRequest proto.InternalMessageInfo

// AssetsLockedEventsResponse is the response type for the GetAssetsLockedEvents
// query.
type AssetsLockedEventsResponse struct {
	// events contains a list of AssetsLockedEvents.
	Events []*types.AssetsLockedEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (m *AssetsLockedEventsResponse) Reset()         { *m = AssetsLockedEventsResponse{} }
func (m *AssetsLockedEventsResponse) String() string { return proto.CompactTextString(m) }
func (*AssetsLockedEventsResponse) ProtoMessage()    {}
func (*AssetsLockedEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8cb11e8648a9ddc, []int{1}
}
func (m *AssetsLockedEventsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AssetsLockedEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AssetsLockedEventsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AssetsLockedEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetsLockedEventsResponse.Merge(m, src)
}
func (m *AssetsLockedEventsResponse) XXX_Size() int {
	return m.Size()
}
func (m *AssetsLockedEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetsLockedEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssetsLockedEventsResponse proto.InternalMessageInfo

func (m *AssetsLockedEventsResponse) GetEvents() []*types.AssetsLockedEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*AssetsLockedEventsRequest)(nil), "mezo.ethereum_sidecar.v1.AssetsLockedEventsRequest")
	proto.RegisterType((*AssetsLockedEventsResponse)(nil), "mezo.ethereum_sidecar.v1.AssetsLockedEventsResponse")
}

func init() {
	proto.RegisterFile("mezo/ethereum_sidecar/v1/ethereum_sidecar.proto", fileDescriptor_f8cb11e8648a9ddc)
}

var fileDescriptor_f8cb11e8648a9ddc = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xbf, 0x4e, 0x02, 0x41,
	0x10, 0xc6, 0x59, 0x4d, 0x48, 0x5c, 0xfc, 0x93, 0x6c, 0x34, 0x39, 0xcf, 0x78, 0x20, 0x15, 0x8d,
	0x7b, 0x01, 0x6c, 0xec, 0x94, 0x48, 0x61, 0x42, 0x05, 0x85, 0x89, 0x0d, 0x81, 0xdb, 0xc9, 0x71,
	0x21, 0x77, 0x8b, 0x3b, 0xcb, 0x45, 0x6d, 0x7c, 0x05, 0xe3, 0x2b, 0xf8, 0x32, 0x94, 0x94, 0xc6,
	0x82, 0x18, 0x78, 0x11, 0x73, 0x7b, 0x87, 0xcd, 0x49, 0xa2, 0xdd, 0x97, 0x99, 0xf9, 0xcd, 0xec,
	0x7c, 0x3b, 0xd4, 0x0d, 0xe1, 0x59, 0xba, 0xa0, 0x47, 0xa0, 0x60, 0x1a, 0xf6, 0x31, 0x10, 0xe0,
	0x0d, 0x94, 0x1b, 0xd7, 0x73, 0x31, 0x3e, 0x51, 0x52, 0x4b, 0x66, 0x25, 0x00, 0xcf, 0x25, 0xe3,
	0xba, 0x7d, 0xe8, 0x4b, 0x5f, 0x9a, 0x22, 0x37, 0x51, 0x69, 0xbd, 0x7d, 0x62, 0x06, 0x0c, 0x55,
	0x20, 0x7c, 0x48, 0xda, 0xa6, 0x2a, 0x4d, 0x56, 0xdf, 0x09, 0x3d, 0xbe, 0x46, 0x04, 0x8d, 0x1d,
	0xe9, 0x8d, 0x41, 0xb4, 0x63, 0x88, 0x34, 0x76, 0xe1, 0x61, 0x0a, 0xa8, 0xd9, 0x0d, 0xdd, 0xc7,
	0x44, 0x46, 0x1e, 0xf4, 0x51, 0x0f, 0x94, 0xb6, 0x48, 0x85, 0xd4, 0x76, 0x5a, 0xa7, 0xb3, 0x45,
	0x99, 0x7c, 0x2e, 0xca, 0x47, 0x9e, 0xc4, 0x50, 0x22, 0x8a, 0x31, 0x0f, 0xa4, 0x1b, 0x0e, 0xf4,
	0x88, 0xdf, 0x46, 0xba, 0xbb, 0xb7, 0x86, 0x7a, 0x09, 0xc3, 0xae, 0xe8, 0xee, 0x4f, 0x17, 0x88,
	0x84, 0xb5, 0xf5, 0x97, 0x1e, 0xa5, 0x35, 0xd2, 0x8e, 0x44, 0xf5, 0x8e, 0xda, 0xbf, 0x3d, 0x12,
	0x27, 0x32, 0x42, 0x60, 0x97, 0xb4, 0x08, 0x26, 0x62, 0x91, 0xca, 0x76, 0xad, 0xd4, 0x38, 0xe3,
	0xc6, 0xa1, 0x6c, 0xcf, 0xb8, 0xce, 0x73, 0x6c, 0x37, 0x03, 0x1a, 0x6f, 0x84, 0x1e, 0xb4, 0x33,
	0x27, 0x7b, 0xa9, 0x91, 0xec, 0x85, 0xb2, 0xfc, 0x30, 0xd6, 0xe4, 0x9b, 0x6c, 0xe7, 0x1b, 0xfd,
	0xb3, 0x2f, 0xfe, 0x07, 0xa5, 0xfb, 0xb4, 0x3a, 0xb3, 0xa5, 0x43, 0xe6, 0x4b, 0x87, 0x7c, 0x2d,
	0x1d, 0xf2, 0xba, 0x72, 0x0a, 0xf3, 0x95, 0x53, 0xf8, 0x58, 0x39, 0x85, 0xfb, 0x86, 0x1f, 0xe8,
	0xd1, 0x74, 0xc8, 0x3d, 0x19, 0x9a, 0xb3, 0x39, 0x97, 0xca, 0x37, 0x42, 0xb8, 0x8f, 0xf9, 0x13,
	0xd2, 0x4f, 0x13, 0xc0, 0x61, 0xd1, 0x7c, 0x74, 0xf3, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x44, 0xf4,
	0x70, 0xda, 0x68, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EthereumSidecarClient is the client API for EthereumSidecar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EthereumSidecarClient interface {
	// AssetsLockedEvents returns AssetsLockedEvents within a sequence range.
	AssetsLockedEvents(ctx context.Context, in *AssetsLockedEventsRequest, opts ...grpc.CallOption) (*AssetsLockedEventsResponse, error)
}

type ethereumSidecarClient struct {
	cc grpc1.ClientConn
}

func NewEthereumSidecarClient(cc grpc1.ClientConn) EthereumSidecarClient {
	return &ethereumSidecarClient{cc}
}

func (c *ethereumSidecarClient) AssetsLockedEvents(ctx context.Context, in *AssetsLockedEventsRequest, opts ...grpc.CallOption) (*AssetsLockedEventsResponse, error) {
	out := new(AssetsLockedEventsResponse)
	err := c.cc.Invoke(ctx, "/mezo.ethereum_sidecar.v1.EthereumSidecar/AssetsLockedEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EthereumSidecarServer is the server API for EthereumSidecar service.
type EthereumSidecarServer interface {
	// AssetsLockedEvents returns AssetsLockedEvents within a sequence range.
	AssetsLockedEvents(context.Context, *AssetsLockedEventsRequest) (*AssetsLockedEventsResponse, error)
}

// UnimplementedEthereumSidecarServer can be embedded to have forward compatible implementations.
type UnimplementedEthereumSidecarServer struct {
}

func (*UnimplementedEthereumSidecarServer) AssetsLockedEvents(ctx context.Context, req *AssetsLockedEventsRequest) (*AssetsLockedEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssetsLockedEvents not implemented")
}

func RegisterEthereumSidecarServer(s grpc1.Server, srv EthereumSidecarServer) {
	s.RegisterService(&_EthereumSidecar_serviceDesc, srv)
}

func _EthereumSidecar_AssetsLockedEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetsLockedEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EthereumSidecarServer).AssetsLockedEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mezo.ethereum_sidecar.v1.EthereumSidecar/AssetsLockedEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EthereumSidecarServer).AssetsLockedEvents(ctx, req.(*AssetsLockedEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EthereumSidecar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mezo.ethereum_sidecar.v1.EthereumSidecar",
	HandlerType: (*EthereumSidecarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssetsLockedEvents",
			Handler:    _EthereumSidecar_AssetsLockedEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mezo/ethereum_sidecar/v1/ethereum_sidecar.proto",
}

func (m *AssetsLockedEventsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssetsLockedEventsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssetsLockedEventsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SequenceEnd != nil {
		{
			size := m.SequenceEnd.Size()
			i -= size
			if _, err := m.SequenceEnd.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
			i = encodeVarintEthereumSidecar(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.SequenceStart != nil {
		{
			size := m.SequenceStart.Size()
			i -= size
			if _, err := m.SequenceStart.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
			i = encodeVarintEthereumSidecar(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AssetsLockedEventsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AssetsLockedEventsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AssetsLockedEventsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintEthereumSidecar(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintEthereumSidecar(dAtA []byte, offset int, v uint64) int {
	offset -= sovEthereumSidecar(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AssetsLockedEventsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SequenceStart != nil {
		l = m.SequenceStart.Size()
		n += 1 + l + sovEthereumSidecar(uint64(l))
	}
	if m.SequenceEnd != nil {
		l = m.SequenceEnd.Size()
		n += 1 + l + sovEthereumSidecar(uint64(l))
	}
	return n
}

func (m *AssetsLockedEventsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovEthereumSidecar(uint64(l))
		}
	}
	return n
}

func sovEthereumSidecar(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEthereumSidecar(x uint64) (n int) {
	return sovEthereumSidecar(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AssetsLockedEventsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEthereumSidecar
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssetsLockedEventsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssetsLockedEventsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceStart", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEthereumSidecar
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v cosmossdk_io_math.Int
			m.SequenceStart = &v
			if err := m.SequenceStart.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceEnd", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEthereumSidecar
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v cosmossdk_io_math.Int
			m.SequenceEnd = &v
			if err := m.SequenceEnd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEthereumSidecar(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AssetsLockedEventsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEthereumSidecar
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AssetsLockedEventsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AssetsLockedEventsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEthereumSidecar
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, &types.AssetsLockedEvent{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEthereumSidecar(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEthereumSidecar
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEthereumSidecar(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEthereumSidecar
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEthereumSidecar
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEthereumSidecar
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEthereumSidecar
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEthereumSidecar
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEthereumSidecar
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEthereumSidecar        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEthereumSidecar          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEthereumSidecar = fmt.Errorf("proto: unexpected end of group")
)
